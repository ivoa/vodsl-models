
model source (1.0) "This is a sample data model. It contains the IVOA UML Profile and imports the IVOA_Profile data model with primitive types.
It has some sample relationships etc to be used in documentation etc."
     
       include "IVOA.vodsl"
     
       include "PhotDM-alt.vodsl"
     
enum LuminosityType  ""
{
magnitude  "",
flux  ""
}

dtype AlignedEllipseError  -> SkyError ""
  {   
        longError: ivoa.real   "";
        latError: ivoa.real   "";
  }

dtype CircleError  -> SkyError ""
  {   
        radius: ivoa.real   "";
        unnamed1: PositionMeasurement  @?   "";
  }

dtype GenericEllipseError  -> SkyError ""
  {   
        major: ivoa.real   "major axis of error ellipse";
        minor: ivoa.real   "";
        pa: ivoa.real  @*   "Position angle of error ellipse in coordinate system of position.";
  }

dtype SkyCoordinate  ""
  {   
        longitude: ivoa.quantity.RealQuantity   "The longitude part of this position in units of degrees.";
        latitude: ivoa.quantity.RealQuantity   "The latitude part of this position in units of degrees.";
        frame  references SkyCoordinateFrame "";
  }

abstract dtype SkyError  "Error of a position on the sky."
  {   
  }

otype AlgorithmicInterpreter  -> Interpreter ""
  {   
  }

otype AstroObject  ""
  {   
        classification: ivoa.string  @?   "";
        identification : ObjectIdentification @*  as composition "";
        part : ObjectPart @*  as composition "";
  }

otype HumanEyeball  -> Interpreter ""
  {   
  }

otype InputCatalogue  ""
  {   
        sourceCatalogue  references SourceCatalog "";
  }

otype Interpretation  -> _12_1_89c0276_1424036580215_71289_580 "From a predefined set of SOurce Catalogue makes an 'interpretation'. This amounts to deciding that some of these sources are real objects rather than noise peaks for example. 
This may be done by humans scanning source catalogues or by an automated algorithm."
  {   
        result : ObjectCatalogue @*  as composition "";
        inputData : InputCatalogue @*  as composition "";
  }

abstract otype Interpreter  -> _12_1_89c0276_1424036704835_376785_961 ""
  {   
  }

otype LuminosityMeasurement  ""
  {   
        value: ivoa.quantity.RealQuantity   "";
        error: ivoa.quantity.RealQuantity  @?   "";
        description: ivoa.string  @?   "";
        type: LuminosityType   "";
        calculator  references PixelsMomentCalculator "Reference to algorithm defining a luminosity from the pixels defining a SourceDetection.";
  }

otype MatchedSource  ""
  {   
          @?  references Source "";
  }

otype ObjectCatalogue  ""
  {   
        object : AstroObject @*  as composition "";
  }

otype ObjectIdentification  ""
  {   
        source  references Source "";
  }

otype ObjectPart  ""
  {   
        role: ivoa.string  @?   "";
        component  references AstroObject "";
  }

otype PixelsMomentCalculator  "Algorithm for caculating an aggregate property from the pixels defining a source detection. "
  {   
        definition: ivoa.string  @?   "";
        name: ivoa.string  @?   "";
  }

otype PositionMeasurement  ""
  {   
        position: SkyCoordinate   "";
        positionError: SkyError  @?   "";
        calculator  references PixelsMomentCalculator "Reference to algorithm defining a position from the pixels defining a SourceDetection.";
  }

otype SkyCoordinateFrame  ""
  {   
        name: ivoa.string   "";
        documentURI: ivoa.anyURI   "";
        equinox: ivoa.string  @?   "";
        system: ivoa.string  @?   "";
  }

abstract otype Source  -> _12_1_89c0276_1425582597633_389626_1633 "A source is basically an area on the sky that has been identified as of interest and to which one has assigned aggregate information such as position, luminosity, shape, whatever. 
The basis for all sources are source detections resulting from an anlysis of basic observations (capturing photons in most cases). Cross match algorithms take source catalogues, may be source detections, or results of other cross matches, and groups some of these together. The results of these are also Source-s."
  {   
        position : PositionMeasurement @*  as composition "";
        luminosity : LuminosityMeasurement @*  as composition "";
  }

abstract otype SourceCatalog  -> _12_1_89c0276_1424036744215_137443_1035 ""
  {   
        source : Source @*  as composition "";
  }

otype SourceDetection  -> Source ""
  {   
        name: ivoa.string   "";
        description: ivoa.string  @?   "";
        classification:    "";
        pixel : SourcePixel @*  as composition "";
  }

otype SourceDetectionCatalog  -> SourceCatalog ""
  {   
  }

otype SourceExtraction  -> _12_1_89c0276_1424036580215_71289_580 ""
  {   
        sourceImage : SourceImage @*  as composition "";
  }

otype SourceExtractor  -> _12_1_89c0276_1424036704835_376785_961 ""
  {   
        propertyCalculator : PixelsMomentCalculator @*  as composition "";
  }

otype SourceImage  "Associative type between a sourceextraction experiment and the images on which it acts."
  {   
    image  references obs.Image "";
  }

otype SourcePixel  ""
  {   
        weight: ivoa.real  @?   "";
        pixel  references obs.PixelFluxMeasurement "";
  }

otype XMatchCatalogue  -> SourceCatalog ""
  {   
  }

otype XMatchOperation  -> _12_1_89c0276_1424036580215_71289_580 ""
  {   
        result : XMatchCatalogue @*  as composition "";
  }

otype XMatchTuple  -> Source ""
  {   
        matchedSource : MatchedSource @*  as composition "";
  }

otype XMatcher  -> _12_1_89c0276_1424036704835_376785_961 ""
  {   
  }
