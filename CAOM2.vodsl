
model caom (0.1) "This is a sample data model. It contains the IVOA UML Profile and imports the IVOA_Profile data model with primitive types.
It has some sample relationships etc to be used in documentation etc."
     
       include "IVOA.vodsl"
     
    primitive Keywords  ""
enum CalibrationLevel  ""
{
RAW_INSTRUMENTAL  "",
RAW_STANDARD  "",
CALIBRATED  "",
PRODUCT  ""
}

enum DataProductType  ""
{
IMAGE  "",
SPECTRUM  "",
TIMESERIES  "",
VISIBILITY  "",
EVENTLIST  "",
CUBE  "",
CATALOG  ""
}

enum EnergyBand  ""
{
RADIO  "",
MILLIMETER  "",
INFRARED  "",
OPTICAL  "",
UV  "",
EUV  "",
XRAY  "",
GAMMARAY  ""
}

enum ObservationIntentType  ""
{
SCIENCE  "",
CALIBRATION  ""
}

enum PolarizationState  ""
{
I  "",
Q  "",
U  "",
V  "",
RR  "",
LL  "",
RL  "",
LR  "",
XX  "",
YY  "",
POLI  "",
FPOLI  "",
EPOLI  "",
CPOLI  "",
NPOLI  ""
}

enum ProductType  ""
{
SCIENCE  "",
CALIBRATION  "",
PREVIEW  "",
INFO  "",
NOISE  "",
WEIGHT  "",
AUXILIARY  "",
THUMBNAIL  ""
}

enum Quality  ""
{
JUNK  ""
}

enum ReleaseType  ""
{
DATA  "",
META  ""
}

enum Status  ""
{
FAIL  ""
}

enum TargetType  ""
{
OBJECT  "",
FIELD  ""
}

dtype Axis  ""
  {   
        ctype: ivoa:string   "";
        cunit: ivoa:string  @?   "";
  }

dtype CoordError  ""
  {   
        crder: ivoa:real  @?   "";
        csyer: ivoa:real  @?   "";
  }

dtype CoordFunction1D  ""
  {   
        naxis: ivoa:integer   "";
        refCoord: RefCoord   "";
        delta: ivoa:real   "";
  }

dtype CoordRange1D  ""
  {   
        start: RefCoord   "";
        end: RefCoord   "";
  }

dtype DataQuality  ""
  {   
        flag: Quality   "";
  }

dtype EnergyTransition  ""
  {   
        species: ivoa:string   "";
        transition: ivoa:string   "";
  }

dtype Point  ""
  {   
        cval1: ivoa:real   "";
        cval2: ivoa:real   "";
  }

dtype RefCoord  ""
  {   
        pix: ivoa:real   "";
        val: ivoa:real   "";
  }

dtype Requirements  ""
  {   
        flag: Status   "";
  }

dtype Slice  ""
  {   
        axis: Axis   "";
        bin: ivoa:integer   "";
  }

dtype TargetPosition  ""
  {   
        coordinates: Point   "";
        coordsys: ivoa:string   "";
        equinox: ivoa:real  @?   "";
  }

otype Algorithm  ""
  {   
        name: ivoa:string   "";
  }

otype Artifact  ""
  {   
        uri: ivoa:anyURI   "";
        productType: ProductType   "";
        release: ReleaseType   "";
        contetType: ivoa:string  @?   "";
        contetLength: ivoa:integer  @?   "";
        parts : Part @*  as composition "";
  }

otype Chunk  ""
  {   
        productType: ProductType  @?   "";
        naxis: ivoa:integer  @?   "";
        positionAxis1: ivoa:integer  @?   "";
        positionAxis2: ivoa:integer  @?   "";
        energyAxis: ivoa:integer  @?   "";
        timeAxis: ivoa:integer  @?   "";
        polarizationAxis: ivoa:integer  @?   "";
        observableAxis: ivoa:integer  @?   "";
        observable : ObservableAxis @?  as composition "";
        position : SpatialWCS @?  as composition "";
        energy : SpectralWCS @?  as composition "";
        time : TemporalWCS @?  as composition "";
        polarization : PolarizationWCS @?  as composition "";
  }

otype CompositeObservation  -> Observation ""
  {   
        members : MemberObservation @*  as composition "";
  }

abstract otype CoordAxis1D  ""
  {   
        axis: Axis   "";
        error: CoordError  @?   "";
        range: CoordRange1D  @?   "";
        function: CoordFunction1D  @?   "";
        bounds : CoordBounds1D @?  as composition "";
  }

otype CoordAxis2D  ""
  {   
        axis1: Axis   "";
        axis2: Axis   "";
        error1: CoordError  @?   "";
        error2: CoordError  @?   "";
  }

otype CoordBounds1D  ""
  {   
        samples: CoordRange1D @[2..-1]  "";
  }

otype Environment  ""
  {   
        seeing: ivoa:real  @?   "";
        humidity: ivoa:real  @?   "";
        elevation: ivoa:real  @?   "";
        tau: ivoa:real  @?   "";
        wavelengthTau: ivoa:real  @?   "";
        ambientTemp: ivoa:real  @?   "";
        photometric: ivoa:boolean  @?   "";
  }

otype InputPlane  ""
  {   
        plane  references Plane "";
  }

otype Instrument  ""
  {   
        name: ivoa:string   "";
        keywords: Keywords  @?   "";
  }

otype MemberObservation  ""
  {   
        simpleObservation  references SimpleObservation "";
  }

otype Metrics  ""
  {   
        sourceNumberDensity: ivoa:real  @?   "";
        background: ivoa:real  @?   "";
        backgroundStddev: ivoa:real  @?   "";
        fluxDensityLimit: ivoa:real  @?   "";
        magLimit: ivoa:real  @?   "";
  }

otype ObservableAxis  ""
  {   
        dependent: Slice   "";
        independent: Slice  @?   "";
  }

otype Observation  ""
  {   
        collection: ivoa:string   "";
        observationID: ivoa:string   "";
        metaRelease: ivoa:datetime  @?   "";
        sequenceNumber: ivoa:integer  @?   "";
        type: ivoa:string  @?   "";
        intent: ObservationIntentType  @?   "";
        targetPosition: TargetPosition  @?   "";
        requirements: Requirements  @?   "";
        planes : Plane @*  as composition "";
        environment : Environment @?  as composition "";
        telescope  @?  references Telescope "";
        target  @?  references Target "";
        proposal  @?  references Proposal "";
        istrument  @?  references Instrument "";
        algorithm  @?  references Algorithm "";
  }

otype Part  ""
  {   
        name: ivoa:string   "";
        productType: ProductType  @?   "";
        chunk : Chunk @*  as composition "";
  }

otype Plane  ""
  {   
        productID: ivoa:string   "";
        metaRelease: ivoa:datetime  @?   "";
        dataRelease: ivoa:datetime  @?   "";
        dataProductType: DataProductType  @?   "";
        calibrationLevel: CalibrationLevel  @?   "";
        quality: DataQuality  @?   "";
        artifacts : Artifact @*  as composition "";
        provenance : Provenance @?  as composition "";
        metics : Metrics @?  as composition "";
  }

otype PolarizationWCS  -> CoordAxis1D ""
  {   
  }

otype Proposal  ""
  {   
        proposalID: ivoa:string   "";
        pi: ivoa:string  @?   "";
        project: ivoa:string  @?   "";
        title: ivoa:string  @?   "";
        keywords: Keywords  @?   "";
  }

otype Provenance  ""
  {   
        name: ivoa:string   "";
        reference: ivoa:anyURI  @?   "";
        metaRelease: ivoa:datetime  @?   "";
        version: ivoa:string  @?   "";
        project: ivoa:string  @?   "";
        producer: ivoa:string  @?   "";
        runID: ivoa:string  @?   "";
        lastExecuted: ivoa:datetime  @?   "";
        keywords: Keywords  @?   "";
        inputs : InputPlane @*  as composition "";
  }

otype SimpleObservation  -> Observation ""
  {   
  }

otype SpatialWCS  -> CoordAxis2D ""
  {   
        coordsys: ivoa:string  @?   "";
        equinox: ivoa:real  @?   "";
        resolution: ivoa:real  @?   "";
  }

otype SpectralWCS  -> CoordAxis1D ""
  {   
        specsys: ivoa:string   "";
        ssysobs: ivoa:string  @?   "";
        ssyssrc: ivoa:string  @?   "";
        restfrq: ivoa:real  @?   "";
        restwav: ivoa:real  @?   "";
        velosys: ivoa:real  @?   "";
        zsource: ivoa:real  @?   "";
        velang: ivoa:real  @?   "";
        bandpassName: ivoa:string  @?   "";
        transition: EnergyTransition  @?   "";
        resolvingPower: ivoa:real  @?   "";
  }

otype Target  ""
  {   
        name: ivoa:string   "";
        type: TargetType  @?   "";
        redshift: ivoa:real  @?   "";
        standard: ivoa:boolean  @?   "";
        keywords: Keywords  @?   "";
        moving: ivoa:boolean  @?   "";
  }

otype Telescope  ""
  {   
        name: ivoa:string   "";
        geoLocationX: ivoa:real  @?   "";
        geoLocationY: ivoa:real  @?   "";
        geoLocationZ: ivoa:real  @?   "";
        keywords: Keywords  @?   "";
  }

otype TemporalWCS  -> CoordAxis1D ""
  {   
        timesys: ivoa:string  @?   "";
        trefpos: ivoa:string  @?   "";
        mjdref: ivoa:real  @?   "";
        exposure: ivoa:real  @?   "";
        resolution: ivoa:real  @?   "";
  }
