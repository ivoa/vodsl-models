model obscore ( 0.1 ) "This is the VO-DML representation of the ObsCore data model.
It is ported from the recommendation in http://www.ivoa.net/documents/ObsCore/index.html"
	   author "tbd"

	include "IVOA.vodsl"

	include "Characterization.vodsl"

	package Provenance ""
	{

		abstract otype ObservingElement ""
		{

			name : string  "" ;
			type : string  "" ;
		}

		otype ObsConfig ""
		{

			observingElement : Provenance.ObservingElement  @* as composition "";
		}


		otype Filter extends Provenance.ObservingElement  ""
		{
		}

		otype Facility extends Provenance.ObservingElement  ""
		{
		}

		otype Instrument extends Provenance.ObservingElement  ""
		{
		}

		otype Detector extends Provenance.ObservingElement  ""
		{
		}

		otype Proposal ""
		{

			identifier : string  "" ;
		}
	}

	otype Observation ""
	{

		dataProductType : string  "Data product (file content) primary type" ;
		dataProductSubtype : string  @? "Data product specific type" ;
		calibLevel : integer "Calibration level of the observation: in {0, 1, 2, 3}" /*would have been nicer as an enum */;
		target : Target  @? "" ;
		dataID : DataID  "" ;
		access : Access  "" ;
		curation : Curation  as composition "";
		characterisation : ObsCharacterisation  as composition "";
		obsconfig references  Provenance.ObsConfig "";
		proposal references Provenance.Proposal "";
		
	}

	otype Curation ""
	{

		CONTAINER : Obs  as composition "Reference to container in collection curation";
		releaseDate : datetime  @? "" ;
		publisherDID : string  "" ;
		publisherId : string  @? "" ;
		reference : string  @? "" ;
		rights : Rights  @? "" ;
	}

	otype ObsCharacterisation extends Char  "" { 
    CONTAINER : Obs  as
	composition "Reference to container in collection characterisation";
	 }

	dtype DataID ""
	{

		observationID : string  "" ;
		title : string  @? "" ;
		collection : string  "Name of the data collection" ;
		creationDate : datetime  @? "" ;
		creator : string  @? "" ;
		creatorDID : string  @? "" ;
	}

	dtype Target ""
	{

		name : string  "" ;
		classification : string  @? "" ;
	}

	dtype Access ""
	{

		reference : anyURI  "" ;
		format : FormatType  @? "" ;
		size : integer  @? "" ;
	}
	enum FormatType ""
	{
		fits ""
		,
		votable ""
	}
	enum Rights ""
	{
		Public ""
		,
		Secure ""
		,
		Proprietary ""
	}

