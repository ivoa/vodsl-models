
model coordsys (2.0) "The coordsys model defines a pattern for Coordinate Frame specifications, various Coordinate System objects for bundling Coordinate Frames into associated groups, and implements the CoordFrame pattern for several physical domains.  The expectation is that as models are created which touch on domains not represented here, they will implement this pattern in the same fashion for the new domain.  This implementation may reside in the other model, or be added to this list of implementations.  Models which refer to the CoordFrame of this model are stating an expectation that the instances included follow the specified pattern.
"
     
 author "Arnold Rots, Mark Cresitello-Dittmar"
       include "IVOA.vodsl"
     
abstract otype CoordFrame  ""
  {   
  }

otype CoordSys  "The CoordSys object is the parent of a set of containers for organizing Coordinate Frame specifications into related groupings.  "
  {   
        genericFrame  @*  references domain.generic.GenericFrame "";
  }

otype AstroCoordSystem  -> CoordSys "AstroCoordSystem is a container object for organizing physical Coordinate Frame specifications into related groupings.  The object provides a references to Coordinate Frame instances in each of the known domain implementations.  As a whole, the AstroCoordSystem should provide a complete description of the domain space. "
  {   
        polarizationFrame  @?  references domain.polarization.PolarizationFrame "";
        spaceFrame  @?  references domain.spatial.SpaceFrame "";
        timeFrame  @?  references domain.temporal.TimeFrame "";
        spectralFrame  @?  references domain.spectral.SpectralFrame "";
  }

otype PixelCoordSystem  "The PixelCoordSystem contains the complete list of Pixel Frame specifications.  Here, the relation between the system and its frames is different than in the physical CoordSys.  In the pixel domain, there is only 1 system, composed of a specific set of PixelAxes organized in PixelFrames."
  {   
        pixelFrame : domain.pixel.PixelFrame @+  as composition "";
  }

package domain  "The Domain package contains implementations of the Coordinate Frame pattern for various physical domains.  Many of these domains are 1-Dimensional and there is a good deal of consolidation which could take place in those domains (ie 1-1 relations could get absorbed or eliminated).  However, the defined pattern satisfies ALL domains, and we feel the consistancy this generates simplifies the understanding and implementation of the model.  If one understands the pattern, the interpretation of any domain is straight-forward."
{
      
package pixel  "This package implements the Coordinate Frame pattern for the Pixel domain.
The Pixel coordinate space is defined as a 'virtual' binned space, with no physical meaning.  The axes in this space provide integer indexes into the space."
{
      
dtype PixelCoord  ""
  {   
        loc: ivoa:integer   "";
        axis  references domain.pixel.PixelAxis "";
  }

otype PixelFrame  -> CoordFrame "origin: 0.0
dimensionality: 1..3
orientation: n/a
"
  {   
        coordSpace : domain.pixel.CoordSpace as composition "";
  }

otype PixelSpace  -> domain.pixel.CoordSpace ""
  {   
  }

otype PixelAxis  ""
  {   
        name: ivoa:string   "";
        length: ivoa:nonnegativeInteger   "";
  }

abstract otype CoordSpace  ""
  {   
        axis : domain.pixel.PixelAxis @+  as composition "";
  }

}
  
package generic  "Implementation of the Coordinate Frame pattern for 'generic' domains.   The generic domain covers any domain not represented by the specialized physical domains, and a specialized representation is not deemed necessary."
{
      
dtype GenericCoord  "An instance of a point along the associated axis.
NOTE: This represents an absolute point in the coordinate space and not a 'measured' value, which is defined in the coords model."
  {   
        loc: ivoa:Quantity   "";
        axis  references domain.generic.CoordAxis "";
  }

otype GenericFrame  -> CoordFrame "origin: 0.0 
dimensionality: 1D
orientation: n/a
"
  {   
        coordSpace : domain.generic.CoordSpace as composition "";
  }

otype CoordAxis  ""
  {   
        name: ivoa:string   "";
        domainMin: ivoa:Quantity  @?   "";
        domainMax: ivoa:Quantity  @?   "";
  }

abstract otype CoordSpace  ""
  {   
        axis : domain.generic.CoordAxis @+  as composition "";
  }

otype CoordSpace1D  -> domain.generic.CoordSpace ""
  {   
  }

}
  
package spatial  "Implementation of the Coordinate Frame pattern for the Spatial domain.
This domain is relatively complex each property of the pattern ( origin, orientation, coordinate space ) has a non-trivial definition and the domain has a higher level of dimensionality.
"
{
      
enum EpochType  ""
{
J  "",
B  ""
}

enum StdRefPosition  ""
{
TOPOCENTER  "",
BARYCENTER  "",
HELIOCENTER  "",
GEOCENTER  "",
GALACTIC_CENTER  "",
LOCAL_GROUP_CENTER  "",
MOON  "",
EMBARYCENTER  "",
MERCURY  "",
VENUS  "",
MARS  "",
JUPITER  "",
SATURN  "",
URANUS  "",
NEPTUNE  "",
PLUTO  "",
RELOCATABLE  "",
LSR  "",
LSRK  "",
LSRD  "",
UNKNOWN  "",
CUSTOM  ""
}

enum StdRefFrame  ""
{
ICRS  "",
FK4  "",
FK5  "",
ECLIPTIC  "",
GALACTIC_I  "",
GALACTIC_II  "",
SUPER_GALACTIC  "",
AZ_EL  "",
BODY  "",
GEO_C  "",
GEO_D  "",
MAG  "",
GSE  "",
GSM  "",
SM  "",
HGC  "",
HEE  "",
HEEQ  "",
HCI  "",
HCD  "",
MERCURY_C  "",
VENUS_C  "",
LUNA_C  "",
MARS_C  "",
JUPITER_C_III  "",
SATURN_C_III  "",
URANUS_C_III  "",
NEPTUNE_C_III  "",
PLUTO_C  "",
MERCURY_G  "",
VENUS_G  "",
LUNA_G  "",
MARS_G  "",
JUPITER_G_III  "",
SATURN_G_III  "",
URANUS_G_III  "",
NEPTUNE_G_III  "",
PLUTO_G  "",
UNKNOWN  "",
CUSTOM  ""
}

enum Handedness  ""
{
left  "",
right  ""
}

dtype Epoch  ""
  {   
        type: domain.spatial.EpochType   "";
        year: ivoa:real   "";
  }

dtype SpatialCoord  "An instance of a point along the associated axis.
NOTE: This represents an absolute point in the coordinate space and not a 'measured' value, which is defined in the coords model."
  {   
        loc: ivoa:Quantity   "";
        axis  references domain.spatial.CoordAxis "";
  }

abstract dtype SpatialLocation  "SpatialLocation defines the origin of the spatial coordinate space.  This location is represented either by a standard reference position, or a specified point in another Spatial frame.  This object is used as the origin of the SpaceFrame here, but also to specify the Spatial Reference Position (refPosition) associated with other domain Frames.  For example, in the Time domain, the Spatial Reference Position indicates that the 'time' values are the time that the 'event' occured at that location, which may be different from the detector location.  
 "
  {   
  }

dtype StdSpatialLocation  -> domain.spatial.SpatialLocation ""
  {   
        coord: domain.spatial.StdRefPosition   "";
  }

dtype SpatialLocation1D  -> domain.spatial.SpatialLocation ""
  {   
        coord: domain.spatial.SpatialCoord   "";
  }

dtype SpatialLocation2D  -> domain.spatial.SpatialLocation ""
  {   
        coord: domain.spatial.SpatialCoord @[2..2]  "";
  }

dtype SpatialLocation3D  -> domain.spatial.SpatialLocation ""
  {   
        coord: domain.spatial.SpatialCoord @[3..3]  "";
  }

otype SpaceFrame  -> CoordFrame ""
  {   
        origin: domain.spatial.SpatialLocation   "";
        orientation: domain.spatial.StdRefFrame   "";
        equinox: domain.spatial.Epoch  @?   "";
        coordSpace : domain.spatial.CoordSpace as composition "";
  }

abstract otype CoordSpace  ""
  {   
        axis : domain.spatial.CoordAxis @+  as composition "";
  }

otype Spherical  -> domain.spatial.CoordSpace ""
  {   
        handedness: domain.spatial.Handedness  @?   "";
  }

otype Cartesian  -> domain.spatial.CoordSpace ""
  {   
        handedness: domain.spatial.Handedness  @?   "";
  }

otype CoordAxis  ""
  {   
        name: ivoa:string   "";
        domainMin: ivoa:Quantity  @?   "";
        domainMax: ivoa:Quantity  @?   "";
  }

}
  
package spectral  "Implementation of the Coordinate Frame pattern for the Spectral domain.
This is a basic 1-Dimensional coordinate space."
{
      
dtype SpectralCoord  "An instance of a point along the associated Spectral axis."
  {   
        loc: ivoa:RealQuantity   "";
        axis  references domain.spectral.CoordAxis "";
  }

otype SpectralFrame  -> CoordFrame "origin: 0.0
dimensionality: 1D
orientation: n/a
"
  {   
        refPosition: domain.spatial.SpatialLocation   "";
        coordSpace : domain.spectral.CoordSpace as composition "";
  }

otype CoordAxis  ""
  {   
        name: ivoa:string   "";
        domainMin: ivoa:RealQuantity  @?   "";
        domainMax: ivoa:RealQuantity  @?   "";
  }

abstract otype CoordSpace  ""
  {   
        axis : domain.spectral.CoordAxis @+  as composition "";
  }

otype CoordSpace1D  -> domain.spectral.CoordSpace ""
  {   
  }

}
  
package temporal  "Implementation of the Coordinate Frame pattern for the Time domain.
This is a basic 1-Dimensional coordinate space."
{
      
enum TimeScale  ""
{
TT  "",
ET  "",
TDB  "",
TCG  "",
TCB  "",
TAI  "",
UTC  "",
LST  "",
LOCAL  ""
}

abstract dtype TimeCoord  "An instance of a point along the associated axis.
NOTE: This represents an absolute point in the coordinate space and not a 'measured' value, which is defined in the coords model."
  {   
        axis  references domain.temporal.CoordAxis "";
  }

dtype TimeOffset  -> domain.temporal.TimeCoord "The time coordinate is represented as an offset from the origin."
  {   
        loc: ivoa:RealQuantity   "";
  }

dtype TimeInstant  -> domain.temporal.TimeCoord "The time is represented as a particular instant.  While interchangable with the TimeOffset, this form typically has a defined structure in representation."
  {   
        loc: ivoa:datetime   "";
  }

otype TimeFrame  -> CoordFrame "origin: implied
dimensionality: 1D
orientation: n/a
"
  {   
        timescale: domain.temporal.TimeScale   "";
        refPosition: domain.spatial.SpatialLocation   "";
        refDirection: domain.spatial.SpatialLocation  @?   "";
        offset: domain.temporal.TimeOffset  @?   "";
        coordSpace : domain.temporal.CoordSpace as composition "";
  }

abstract otype CoordSpace  ""
  {   
        axis : domain.temporal.CoordAxis @+  as composition "";
  }

otype CoordSpace1D  -> domain.temporal.CoordSpace ""
  {   
  }

otype CoordAxis  ""
  {   
        name: ivoa:string   "";
        domainMin: ivoa:RealQuantity  @?   "";
        domainMax: ivoa:RealQuantity  @?   "";
  }

}
  
package polarization  "Implementation of the Coordinate Frame pattern for the Polarization domain.
This is a 1-Dimensional coordinate space, but the nature of the polarization coordinate values (discrete enumerated strings) requires a different axis specification."
{
      
enum PolStokes  ""
{
I  "",
Q  "",
U  "",
V  ""
}

enum PolCircular  ""
{
RR  "",
LL  "",
RL  "",
LR  ""
}

enum PolLinear  ""
{
XX  "",
YY  "",
XY  "",
YX  ""
}

enum PolVector  ""
{
I  "",
PF  "",
PP  "",
PA  ""
}

abstract dtype PolCoord  ""
  {   
        axis  references domain.polarization.DiscreteAxis "";
  }

dtype PolStokesCoord  -> domain.polarization.PolCoord ""
  {   
        loc: domain.polarization.PolStokes   "";
  }

dtype PolCircularCoord  -> domain.polarization.PolCoord ""
  {   
        loc: domain.polarization.PolCircular   "";
  }

dtype PolLinearCoord  -> domain.polarization.PolCoord ""
  {   
        loc: domain.polarization.PolLinear   "";
  }

dtype PolVectorCoord  -> domain.polarization.PolCoord ""
  {   
        loc: domain.polarization.PolVector   "";
  }

abstract otype PolarizationFrame  -> CoordFrame ""
  {   
        coordSpace : domain.polarization.CoordSpace as composition "";
  }

abstract otype CoordSpace  ""
  {   
        axis : domain.polarization.DiscreteAxis @+  as composition "";
  }

otype CoordSpace1D  -> domain.polarization.CoordSpace ""
  {   
  }

otype DiscreteAxis  "In this domain, the CoordAxis is not a continuous set of points, but rather, a discrete set of values.  The values are provided by a set of coordinates representing the various polarization flavors/states."
  {   
        name: ivoa:string   "";
  }

}
  
}
  