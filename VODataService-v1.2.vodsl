
model VODataService (1.2) 
	   "
        An extension to the core resource metadata (VOResource) for 
        describing data collections and services.
      "
      include "IVOA-v1.0.vodsl"
     
     include "VOResource-v1.1.vodsl"
     
     
otype DataCollection  -> VOResource:Resource "
           A logical grouping of data which, in general, is composed of one 
           or more accessible datasets.  A collection can contain any
           combination of images, spectra, catalogues, or other data.   
          
           (A dataset is a collection of digitally-encoded data that 
           is normally accessible as a single unit, e.g., a file.)
          
            This type is deprecated.  Resource record authors should
            use vs:CatalogResource instead.  This type will be removed
            from the schema when no resource record using it remains in
            the registry.
         "
  {   
        facility: VOResource:ResourceName  @*   "
                     the observatory or facility used to collect the data 
                     contained or managed by this resource.  
                   ";
        instrument: VOResource:ResourceName  @*   "
                     the Instrument used to collect the data contain or 
                     managed by a resource.  
                   ";
        rights: VOResource:Rights  @*   "
                      Information about rights held in and over the resource.
                     
                      This should be repeated for all Rights values that apply.
                    ";
        format: Format  @*   "
                      The physical or digital manifestation of the information 
                      supported by a resource.
                     
                      This should use RFC 2046 media (“MIME”) types for 
                      network-retrievable, digital data.  
                      Non-RFC 2046 values could be used for media that cannot
                      be retrieved over the network.
                    ";
        coverage: Coverage  @? as composition  "
                     Extent of the content of the resource over space, time, 
                     and frequency.
                   ";
        tableset: TableSet  @? as composition  "
                     A description of the tables that are part of this
                     collection. 
                    
                     Each schema name must be
                     unique within this tableset.
                   ";
        accessURL: VOResource:AccessURL  @?   "
                     The URL that can be used to download the data contained in 
                     this data collection.
                   ";
  }

dtype SpatialCoverage  -> VOResource:baseString "
            A coverage on a sphere.  By default, this refers to the
            celestial sphere in the ICRS frame.  Non-celestial frames
            are indicated by non-NULL values of the frame attribute.
         " // IMPL better to just have a string member than derive from baseString - more obvious what the value means....
  {   
        frame: ivoa:string   "
                     When present, the MOC is written in a non-celestial (e.g., 
                     planetary) frame.  Note that for celestial coverages,
                     ICRS must be used.
                   
                     VODataService 1.2 does not prescribe a vocabulary for 
                     what values are allowed here; an external standard.  As
                     long as no such vocabulary is agreed upon, the frame
                     attribute should not be set.
                  ";
  }

otype Coverage  "
           A description of how a resource's contents or behavior maps
           to the sky, to time, and to frequency space, including
           coverage and resolution. 
         "
  {   
        spatial: SpatialCoverage  @?   "
                  An ASCII-serialized MOC defining the spatial coverage 
                  of the resource.
                
                  The MOC is to be understood in the ICRS reference frame 
                  unless a frame attribute is given.
                  Resources should give the coverage at least to order 6
                  (a resolution of about one degree).  The order should be
                  chosen so as to keep the resulting MOC smaller than a few
                  dozens of kB.  If desired, a more precise MOC can be provided
                  on a dedicated endpoint declared in the footprint element.
               ";
        temporal: FloatInterval  @*   "
                  A pair of lower, upper limits of a time interval 
                  for which the resource offers data.
                
                  This is written as for VOTable tabledata (i.e., 
                  whitespace-separated C-style floating point literals).
                  The limits must be given as MJD.  While they
                  are not intended to be precise, they are to be understood
                  in TDB for the solar system barycenter.  The total coverage
                  of the resource is the union of all such intervals.
               ";
        spectral: FloatInterval  @*   "
                  A pair of lower, upper limits of a spectral interval 
                  for which the resource offers data.
                
                  This is written as for VOTable tabledata (i.e., 
                  whitespace-separated C-style floating point literals).
                  The limits must be given in Joules of particle
                  energies.  While the limits are not intended 
                  to be precise, they are to be understood for the
                  solar system barycenter.
                
                  For instance, the Johnson V waveband (480 .. 730 nm)
                  would be specified as “2.72e-19 4.14e-19”
               ";
        footprint: ServiceReference  @?   "
                  A reference to a footprint service for retrieving 
                  precise and up-to-date description of coverage.  
                
                  The ivoid attribute here refers to the standard in which
                  the footprint is given.  The only value defined by 
                  VODataService at this point is ivo://ivoa.net/std/moc, 
                  which indicates that retrieving the footprint URL will return
                  a MOC (any IVOA-approved serialisation is legal).  Note that
                  the ivoid attribute was intended to have a different
                  function in VODataService 1.1.  The current meaning is what
                  implementors actually adopted.
               ";
        waveband: Waveband  @*   "
                  A named spectral region of the electro-magnetic spectrum 
                  that the resource's spectral coverage overlaps with.
                
                  Observations using non-electromagnetic messengers should
                  not give a waveband in version 1.2 of VODataService.  It
                  is expected that additional terms for these will be provided
                  in a future version.
               ";
        regionOfRegard: ivoa:real  @?   "
                  A single numeric value representing the angle, given
                  in decimal degrees, by which a positional query
                  against this resource should be “blurred” in order
                  to get an appropriate match. 
                
                  In the case of image repositories, it might refer to
                  a typical field-of-view size, or the primary beam
                  size for radio aperture synthesis data.  In the case
                  of object catalogues RoR should normally be the
                  largest of the typical size of the objects, the
                  astrometric errors in the positions, or the
                  resolution of the data.  
               ";
  }

dtype ServiceReference  -> VOResource:baseURL "
           The service URL for a potentially registerd service.  That is,
           if an IVOA identifier is also provided, then the service is 
           described in a registry.
         "
  {   
        ivoid: VOResource:IdentifierURI   "
                   The URI form of the IVOA identifier for the service 
                   describing the capability refered to by this element.
                 ";
  }

enum Waveband 
{
Radio  "
                 wavelength >= 10 mm; frequency <= 30 GHz.
               ",
Millimeter  "
                 0.1 mm <= wavelength <= 10 mm; 
                 3000 GHz >= frequency >= 30 GHz.
               ",
Infrared  "
                 1 micron <= wavelength <= 100 micons 
               ",
Optical  "
                 300 nm <= wavelength <= 1000 nm; 
               ",
UV  "
                 100 nm <= wavelength <= 300 nm; 
               ",
EUV  "
                 12 eV <= energy <= 120 eV
               ",
XRay  "
                 0.12 keV <= energy <= 120 keV
               ",
GammaRay  "
                 energy >= 120 keV
               "
}


otype TableSet  "
           The set of tables hosted by a resource.
         "
  {   
        schema: TableSchema  @+  as composition "
                A named description of a group of logically related tables.
               
                The name given by the “name” child element must
                be unique within this TableSet instance.  If there is
                only one schema in this set and/or there is no locally
                appropriate name to provide, the name can be set to
                “default”.  
               
                This aggregation does not need to map to an
                actual database, catalogue, or schema, though the
                publisher may choose to aggregate along such
                designations.  Particular service protocols may
                require stricter patterns.
              ";
  }

otype TableSchema  "
           A detailed description of a logically related group of tables.
         "
  {   
        name: ivoa:string   "
               A name for the group of tables.  
              
               This is used to uniquely identify the group of tables among
               several groups.  If no title is given, this
               name can be used for display purposes.
              
               If there is no appropriate logical name associated with
               this group, the name should be explicitly set to
               “default”.  
             ";
        title: ivoa:string  @?   "
                  A descriptive, human-interpretable name for the group of 
                  tables.
                
                  This is used for display purposes.  There is no requirement
                  regarding uniqueness.  It is useful when there are
                  multiple schemas in the context (e.g., within a
                  tableset; otherwise, the resource title could be
                  used instead).
               ";
        description: ivoa:string  @?   "
               A free text description of the group of tables that should
               explain in general how all of the tables in the group are 
               related.
             ";
        utype: ivoa:string  @?   "
                  An identifier for a concept in a data model that
                  the data in this schema as a whole represent.  
                
                  The form of the utype string depends on the data
                  model; common forms are sequences of dotted identifiers
                  (e.g., in SSA) or URIs (e.g., in RegTAP).
               ";
        table: Table  @* as composition  "
               A description of one table.
             ";
  }

dtype Format  "" 
  {   
  	    format : ivoa:string "" ; 
        isMIMEType: ivoa:boolean   "
                 If true, the content of the element is an RFC 
                 2046-compliant media time.
               ";
  }

otype DataResource  -> VOResource:Service "
           A resource publishing astronomical data.
          
            This resource type should only be used if the resource has no
            common underlying tabular schema (e.g., an inhomogeneous archive).
            Use CatalogResource otherwise.
         "
  {   
        facility: VOResource:ResourceName  @*   "
                     The observatory or facility used to collect the data 
                     contained or managed by this resource.  
                   ";
        instrument: VOResource:ResourceName  @*   "
                     The instrument used to collect the data contain or 
                     managed by a resource.  
                   ";
        coverage: Coverage  @? as composition  "
                     Extent of the content of the resource over space, time, 
                     and frequency.
                   ";
  }

otype DataService  -> DataResource "
            A service for accessing astronomical data.
          
            This resource type should only be used if the service has no
            common underlying tabular schema (e.g., a storage service) or 
            if it is not explicitly accessible (e.g., an ftp server with 
            images).  Use CatalogService otherwise.
         "
  {   
  }

otype ParamHTTP  -> VOResource:Interface "
           A service invoked via an HTTP Query (either Get or Post)
           with a set of arguments consisting of keyword name-value pairs.
         
           Note that the URL for help with this service can be put into
           the service/referenceURL element.
        "
  {   
        queryType: HTTPQueryType @[2..2] //this was [0..2] current vodsl validation marks that as error
         "
                       The type of HTTP request, either GET or POST.
                      
                       The service may indicate support for both GET
                       and POST by providing 2 queryType elements, one
                       with GET and one with POST.  Since the IVOA standard
                       DALI requires standard services to support both
                       GET and POST, this piece of metadata is not
                       useful in the description of standard DAL services
                       and does not need to be given for those.
                     ";
        resultType: ivoa:string  @?   "
                       The MIME media type of a document returned in 
                       the HTTP response.
                     ";
        param: InputParam  @* as composition  "
                       A description of a input parameter that can be 
                       provided as a name=value argument to the service.  
                    ";
        testQuery: ivoa:string  @?   "
                       An ampersand-delimited list of arguments that
                       can be used to test this service interface; 
                       when provided as the input to this interface,
                       it will produce a legal, non-null response.
                     
                       When the interface supports GET, then the full 
                       query URL is formed by the concatenation of the 
                       base URL (given by the accessURL) and the value 
                       given by this testQuery element.  
                    ";
  }

enum HTTPQueryType  "
           The type of HTTP request, either GET or POST.
         "
{
GET ,
POST 
}


otype CatalogResource  -> DataResource "
            A resource giving astronomical data in tabular form.
          
            While this includes classical astronomical catalogues,
            this resource is also appropriate for collections of observations
            or simulation results provided their metadata are available
            in a sufficiently structured form (e.g., Obscore, SSAP, etc).
         "
  {   
        tableset: TableSet  @? as composition  "
                       A description of the tables that are accessible
                       through this service.
                      
                       Each schema name and each table name must be
                       unique within this tableset.
                     ";
  }

otype CatalogService  -> CatalogResource "
            A service that interacts with astronomical data
            through one or more specified tables.
          
            This is the appropriate resource type for normal VO services,
            e.g., TAP, SSAP, SIAP, ConeSearch.
         "
  {   
  }

otype Table  "" 
  {   
        name: ivoa:string   "
                  The fully qualified name of the table.  This name 
                  should include all catalogue or schema prefixes
                  needed to sufficiently uniquely distinguish it in a
                  query.  
                
                  In general, the format of the qualified name may
                  depend on the context; however, when the
                  table is intended to be queryable via ADQL, then the
                  catalogue and schema qualifiers are delimited from the
                  table name with dots (.).  
               ";
        title: ivoa:string  @?   "
                  A descriptive, human-interpretable name for the table.
                
                  This is used for display purposes.  There is no requirement
                  regarding uniqueness.  
               ";
        description: ivoa:string  @?   "
                  A free-text description of the table's contents
               ";
        utype: ivoa:string  @?   "
                  An identifier for a concept in a data model that
                  the data in this table represent.  
                
                  The form of the utype string depends on the data
                  model; common forms are sequences of dotted identifiers
                  (e.g., in SSA) or URIs (e.g., in RegTAP).
               ";
        nrows: ivoa:integer  @?   "
                  The size of the table in rows.
                
                  This is not expected to be exact.  For instance, the
                  estimates on table sizes databases keep for query
                  planning purposes are suitable for this field.
               ";
        column: TableParam  @*  as composition  "
                  A description of a table column.
               ";
        foreignKey: ForeignKey  @* as composition  "
                  A description of a foreign keys, one or more columns
                  from the current table that can be used to join with 
                  another table.  
               ";
        type: ivoa:string   "
               A name for the role this table plays.  Recognized
               values include “output”, indicating this table is output 
               from a query; “base_table', indicating a table
               whose records represent the main subjects of its
               schema; and “view”, indicating that the table represents
               a useful combination or subset of other tables.  Other 
               values are allowed.  
            ";
  }

otype BaseParam  "
            A description of a parameter that places no restriction on 
            the parameter's data type.
          
            As the parameter's data type is usually important, schemas
            normally employ a sub-class of this type
            rather than this type directly.
         "
  {   
        name: ivoa:string  @?   "
                  The name of the parameter or column.
               ";
        description: ivoa:string  @?   "
                  A free-text description of a parameter's or column's 
                  contents.
               ";
        unit: ivoa:string  @?   "
                  The unit associated with the values in the parameter
                  or column.
               ";
        ucd: ivoa:string  @?   "
                  The name of a unified content descriptor that
                  describes the scientific content of the parameter.
                
                  There are no requirements for compliance with any 
                  particular UCD standard.  The format of the UCD can
                  be used to distinguish between UCD1, UCD1+, and
                  SIA-UCD.  See 
                  http://ivoa.net/Documents/latest/UCDlist.html
                  for the latest IVOA standard set.  
               ";
        utype: ivoa:string  @?   "
                  An identifier for a concept in a data model that
                  the data in this schema represent.  
                
                  The form of the utype string depends on the data
                  model; common forms are sequences of dotted identifiers
                  (e.g., in SSA) or URIs (e.g., in RegTAP).
               ";
  }

otype TableParam  -> BaseParam "
            A description of a table parameter having a fixed data type.
         "
  {   
        dataType: TableDataType  @?   "
                        A type of data contained in the column
                     ";
        flag: ivoa:string  @*   "
                        A keyword representing traits of the column.  
                        Recognized values include “indexed”, “primary”, and
                        “nullable”.  
                      
                        See the specification document for definitions 
                        of recognized keywords.
                     ";
        std: ivoa:boolean   "
                     If true, the meaning and use of this parameter is
                     reserved and defined by a standard model.  If false, 
                     it represents a parameter specific to the data described 
                     If not provided, then the value is unknown.
                  ";
  }

otype InputParam  -> BaseParam "
            A description of a service or function parameter having a
            fixed data type. 
          
            The allowed data type names do not imply a size or precise
            format.  This type is intended to be sufficient for describing
            an input parameter to a simple REST service or a function 
            written in a weakly-typed language.
         "
  {   
        dataType: SimpleDataType  @?   "
                        A type of data contained in the parameter
                     ";
        use: ParamUse   "
                     An indication of whether this parameter is
                     required to be provided for the application
                     or service to work properly.  
                  ";
        std: ivoa:boolean   "
                     If true, the meaning and behavior of this parameter is
                     reserved and defined by a standard interface.  If
                     false, it represents an implementation-specific
                     parameter that effectively extends the behavior of the 
                     service or application.  
                  ";
  }

enum ParamUse 
{
required  "
                  The parameter is required for the application or
                  service to work properly.  
               ",
optional  "
                  The parameter is optional but supported by the application or
                  service.
               ",
ignored  "
                  The parameter is not supported and thus is ignored by the 
                  application or service.
               "
}


dtype DataType   "
            A type (in the computer language sense) associated with a 
            parameter with an arbitrary name
          
            This XML type is used as a parent for defining data types
            with a restricted set of names.
         "
  {   
  	    type : ivoa:string "";
        arraysize: ArrayShape   "
                     The shape of the array that constitutes the value.
                   
                     Leave arraysize empty for scalar values.  In version 1.1,
                     this defaulted to 1, which was intended to indicate
                     a scalar.  This is now deprecated; an arraysize of 1 should
                     be avoided now, the future interpretation, in accord with
                     VOTable, will be “array of size 1”.
                  ";
        delim: ivoa:string   "
                     A string that is used to delimit elements of an array
                     value in InputParams.
                   
                     Unless specifically disallowed by the context, 
                     applications should allow optional spaces to 
                     appear in an actual data value before and after 
                     the delimiter (e.g., “1, 5” when delim=“,”).
                   
                     This should not be used for VOTable types; there,
                     VOTable (typcially TABLEDATA) conventions for writing
                     arrays are binding.
                  ";
        extendedType: ivoa:string   "
                     The data value represented by this type can be
                     interpreted as of a custom type identified by 
                     the value of this attribute.
                   
                     If an application does not recognize this
                     extendedType, it should attempt to handle value
                     assuming the type given by the element's value.
                     string is a recommended default type.
                   
                     This element may make use of the extendedSchema
                     attribute to refine the identification of the 
                     type.  extendedTypes without an extendedSchema 
                     mean VOTable xtypes as defined by DALI.
                  ";
        extendedSchema: ivoa:anyURI   "
                     An identifier for the schema that the value given
                     by the extended attribute is drawn from.
                   
                     This attribute is normally ignored if the
                     extendedType attribute is not present.  A missing
                     extendedSchema indicates that extendedType is a
                     VOTable xtype.
                  ";
  }

primitive ArrayShape  -> ivoa:string "
            An expression of a the shape of a multi-dimensional array
            of the form LxNxM... where each value between gives the
            integer length of the array along a dimension.  An
            asterisk (*) as the last dimension of the shape indicates 
            that the length of the last axis is variable or
            undetermined. 
         "
dtype SimpleDataType  "
            A data type restricted to a small set of names which is 
            imprecise as to the format of the individual values.
          
            This set is intended for describing simple input parameters to 
            a service or function.
         "
  {   
  }

abstract dtype TableDataType  -> DataType "
            An abstract parent for a class of data types that can be
            used to specify the data type of a table column.
         "
  {   
  }

dtype VOTableType  "
            A data type supported explicitly by the VOTable format
         "
  {   
  }

abstract dtype TAPDataType  -> TableDataType "
            An abstract parent for the specific data types supported 
            by the Table Access Protocol.
         "
  {   
        size: ivoa:integer   "
                    The length of the fixed-length value
                  
                    This corresponds to the size Column attribute in
                    the TAP_SCHEMA and can be used with data types
                    that are defined with a length (CHAR, BINARY).  
                 ";
  }

dtype TAPType  "
            A data type supported explicitly by the Table Access 
            Protocol (v1.0).  This is deprecated in VODataService 1.2,
            and even TAP 1.0 services are encouraged to declare
            their columns using VOTableType.
         "
  {   
  }


otype ForeignKey  "
           A description of the mapping a foreign key -- a set of 
           columns from one table -- to columns in another table.  
          
            When foreign keys are declared in this way, clients can expect
            that joins constrained with the foreign keys are preformed
            efficiently (e.g., using an index).
         "
  {   
        targetTable: ivoa:string   "
               The fully qualified name (including catalogue and schema, as
               applicable) of the table that can be joined with the 
               table containing this foreign key.
             ";
        fkColumn: FKColumn  @+ as composition  "
               A pair of column names, one from this table and one
               from the target table that should be used to join the
               tables in a query.  
             ";
        description: ivoa:string  @?   "
                  A free-text description of what this key points to
                  and what the relationship means.  
               ";
        utype: ivoa:string  @?   "
                  An identifier for a concept in a data model that
                  the association enabled by this key represents.  
                
                  The form of the utype string depends on the data
                  model; common forms are sequences of dotted identifiers
                  (e.g., in SSA) or URIs (e.g., in RegTAP).
               ";
  }

otype FKColumn  "
           A pair of columns that are used to join two tables.  
          
           To do an inner join of data from the two tables, a query should 
           include a constraint that sets the value from the first column equal
           to the value in the second column.
          
           This type assumes that it is used in the context of 
           implied source (i.e., current) and target tables, as in
           the ForeignKey type's fkColumn.
         "
  {   
        fromColumn: ivoa:string   "
               The unqualified name of the column from the current table.
             ";
        targetColumn: ivoa:string   "
               The unqualified name of the column from the target table.
             ";
  }

primitive FloatInterval  -> ivoa:string "
            An interval of floating point numbers.
          
            This uses VOTable TABLEDATA serialisation, i.e., simply
            a pair of XSD floating point numbers separated by whitespace;
            note that software utilising non-XSD aware parsers has to 
            perform whitespace normalisation itself here (in particular, 
            for the internal whitespace).
         "